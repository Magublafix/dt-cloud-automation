[
  {
    "name": "Availability Rate;sli=h_avail;pass=>={cond}",
    "metricSelector": "builtin:host.availability:splitBy(\"dt.entity.host\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1596,
      "left": 912,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Service Response Time;sli=s_rt;pass=<={cond}",
    "metricSelector": "builtin:service.response.time:splitBy(\"dt.entity.service\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 114,
      "left": 456,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "CPU I/O Wait;sli=h_iowait;pass=<={cond}",
    "metricSelector": "builtin:host.cpu.iowait:splitBy(\"dt.entity.host\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1596,
      "left": 456,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "CPU Time Per Service;sli=s_cputime;pass=<={cond}",
    "metricSelector": "builtin:service.cpu.time:splitBy(\"dt.entity.service\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 114,
      "left": 1368,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "CPU Usage;sli=h_cpu;pass=<={cond}",
    "metricSelector": "builtin:host.cpu.usage:splitBy(\"dt.entity.host\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1596,
      "left": 1368,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Memory Usage;sli=h_mem;pass=<={cond}",
    "metricSelector": "builtin:host.mem.usage:splitBy(\"dt.entity.host\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1596,
      "left": 1824,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Failure Rate;sli=s_error;pass=<={cond}",
    "metricSelector": "builtin:service.errors.total.rate:splitBy(\"dt.entity.service\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 114,
      "left": 912,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Container Restarts;sli=container_restarts;pass=<={cond}",
    "metricSelector": "builtin:kubernetes.container.restarts:splitBy(\"dt.entity.cloud_application\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1102,
      "left": 912,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "CPU Usage % of Limit;sli=container_cpu;pass=<={cond}",
    "metricSelector": "builtin:containers.cpu.usagePercent:splitBy(\"dt.entity.container_group_instance\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1102,
      "left": 1368,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Memory Usage % of Limit;sli=container_mem;pass=<={cond}",
    "metricSelector": "builtin:containers.memory.usagePercent:splitBy(\"dt.entity.container_group_instance\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1102,
      "left": 1824,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "% of Desried/Running Pods per Workload;sli=workload_avail;pass=>={cond}",
    "metricSelector": "(100) * (builtin:kubernetes.workload.pods_desired:splitBy()/builtin:kubernetes.pods:filter(and(or(eq(pod_phase,Running)))):splitBy()):sort(value(avg,ascending))",
    "bounds": {
      "top": 608,
      "left": 912,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Failed Pods per Workload;sli=workload_failed;pass=>={cond}",
    "metricSelector": "builtin:kubernetes.pods:filter(and(or(eq(pod_phase,Failed)))):sort(value(avg,ascending))",
    "bounds": {
      "top": 608,
      "left": 456,
      "width": 228,
      "height": 266
    }
  },
  {
    "name": "Pending Pods per Workload;sli=workload_pending;pass=>={cond}",
    "metricSelector": "builtin:kubernetes.pods:filter(and(or(eq(pod_phase,Pending)))):sort(value(avg,ascending))",
    "bounds": {
      "top": 608,
      "left": 684,
      "width": 228,
      "height": 266
    }
  },
  {
    "name": "Running Pods/Non-running per Workload;sli=workload_running;pass=>={cond}",
    "metricSelector": "(100)*((builtin:kubernetes.pods:filter(and(or(eq(pod_phase,Running)))):splitBy():sum)/(builtin:kubernetes.pods:splitBy():sum)):sort(value(avg,ascending))",
    "bounds": {
      "top": 608,
      "left": 0,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "CPU Cores Throttled;sli=container_core;pass=<={cond}",
    "metricSelector": "builtin:containers.cpu.throttledMilliCores:splitBy(\"dt.entity.container_group_instance\",\"Container\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1102,
      "left": 456,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Number of Requests;sli=s_request;pass=>={cond}",
    "metricSelector": "builtin:service.requestCount.total:splitBy(\"dt.entity.service\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 114,
      "left": 0,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "Workloads;sli=workload;pass=>={cond}",
    "metricSelector": "builtin:kubernetes.pods:splitBy(\"dt.entity.cloud_application\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 608,
      "left": 1368,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "# of Containers per Workload;sli=contianers;pass=>={cond}",
    "metricSelector": "builtin:kubernetes.containers:splitBy(\"dt.entity.cloud_application\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1102,
      "left": 0,
      "width": 456,
      "height": 266
    }
  },
  {
    "name": "CPU Load;sli=h_load;pass=>={cond}",
    "metricSelector": "builtin:host.cpu.load:splitBy(\"dt.entity.host\"):sort(value(avg,ascending))",
    "bounds": {
      "top": 1596,
      "left": 0,
      "width": 456,
      "height": 266
    }
  }
]